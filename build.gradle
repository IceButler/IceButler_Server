plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

	// query dsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// Swagger2 gradle
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	// Social login
	implementation 'com.google.code.gson:gson:2.8.7'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation group: 'com.github.scribejava', name: 'scribejava-apis', version: '3.4.1'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'


	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	//feignClient
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1"
	compileOnly "org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1"

}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.1"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

compileJava.doFirst {
	delete file("${querydslDir}/com")
	ant.echo(message: "compileJava... we successully deleted files")
}

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

clean {
	delete file('src/main/generated')
}
